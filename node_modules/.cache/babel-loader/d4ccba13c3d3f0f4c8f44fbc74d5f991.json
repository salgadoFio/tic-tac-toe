{"ast":null,"code":"var _jsxFileName = \"/home/fiorella/Desktop/Pernix/Tic-Tac-Toe Project/tic-tac-toe/src/tic-tac-toe/tic-tac-toe.js\";\nimport React from 'react';\nimport './../css/main-page.css';\nimport swal from 'sweetalert';\nimport { HotKeys } from \"react-hotkeys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.winningCombinations = [[11, 12, 13], [21, 22, 23], [31, 32, 33], [11, 21, 31], [12, 22, 32], [13, 23, 33], [11, 22, 33], [31, 22, 13]];\n    this.state = {\n      gameOver: false,\n      oPlaying: false,\n      keyboardPosition: 11,\n      moving: \"\",\n      usingKeyboard: false,\n      buttons: [{\n        id: 11,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 12,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 13,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 21,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 22,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 23,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 31,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 32,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 33,\n        status: false,\n        shape: \"\"\n      }]\n    };\n    this.play = this.play.bind(this);\n    this.restart = this.restart.bind(this);\n    this.refButton11 = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  contains(buttonShape, combination) {\n    return buttonShape.includes(combination[0]) && buttonShape.includes(combination[1]) && buttonShape.includes(combination[2]);\n  }\n\n  winner(buttonShape) {\n    let win = this.winningCombinations.filter(win => {\n      return this.contains(buttonShape, win);\n    });\n    return win.length > 0;\n  }\n\n  winShapeO(buttons, shape) {\n    let buttonO = buttons.filter(button => button.shape === shape).map(btn => {\n      return btn.id;\n    });\n\n    if (this.winner(buttonO)) {\n      this.setState({\n        gameOver: true\n      });\n      this.displayPopUp(shape);\n    }\n  }\n\n  noWinner(winX, winO) {\n    let availableSpaces = this.state.buttons.filter(button => button.status === false);\n    console.log(availableSpaces === 0 && !winX && !winO);\n    return availableSpaces === 0 && !winX && !winO;\n  }\n\n  generateRandom(buttons) {\n    let availableSpaces = buttons.filter(button => button.status === false);\n    const min = 0;\n    const max = availableSpaces.length;\n    const rand = min + Math.floor(Math.random() * (max - min));\n    return availableSpaces[rand];\n  }\n\n  setButton(buttonId) {\n    let buttonsTemp = this.state.buttons;\n    let buttonTemp = buttonsTemp.find(button => button.id === buttonId);\n    let oPlayingTemp = false;\n    console.log(buttonTemp);\n    console.log(\"Hola\");\n\n    if (!buttonTemp.state) {\n      buttonTemp.shape = \"x\";\n      buttonTemp.status = true;\n      oPlayingTemp = true;\n      this.setState({\n        buttons: buttonsTemp,\n        oPlaying: oPlayingTemp\n      });\n      let winX = this.winShapeO(this.state.buttons, \"x\");\n\n      if (!winX) {\n        buttonTemp = this.generateRandom(this.state.buttons);\n        setTimeout(() => {\n          buttonTemp.shape = \"o\";\n          buttonTemp.status = true;\n          oPlayingTemp = false;\n          this.setState({\n            buttons: buttonsTemp,\n            oPlaying: oPlayingTemp\n          });\n          this.winShapeO(this.state.buttons, \"o\");\n        }, 1000);\n      }\n    } else {\n      swal(\"Por favor elija otra celda\");\n    }\n\n    console.log(this.noWinner(winX, this.winShapeO(this.state.buttons, \"o\")));\n  }\n\n  displayPopUp(shape) {\n    swal(\"Player \" + shape + \" win.\");\n  }\n\n  play(button) {\n    console.log(\"Hola, playing\");\n    this.setButton(button);\n  }\n\n  setKeyPosition(position) {\n    this.setState({\n      keyboardPosition: position\n    });\n  }\n\n  moveRight() {\n    if (this.state.keyboardPosition === 11) {\n      this.setState({\n        keyboardPosition: 12\n      });\n    } else if (this.state.keyboardPosition === 12) {\n      this.setState({\n        keyboardPosition: 13\n      });\n    } else if (this.state.keyboardPosition === 21) {\n      this.setState({\n        keyboardPosition: 22\n      });\n    } else if (this.state.keyboardPosition === 22) {\n      this.setState({\n        keyboardPosition: 23\n      });\n    } else if (this.state.keyboardPosition === 31) {\n      this.setState({\n        keyboardPosition: 32\n      });\n    } else if (this.state.keyboardPosition === 32) {\n      this.setState({\n        keyboardPosition: 33\n      });\n    }\n  }\n\n  moveLeft() {\n    if (this.state.keyboardPosition === 33) {\n      this.setState({\n        keyboardPosition: 32\n      });\n    } else if (this.state.keyboardPosition === 32) {\n      this.setState({\n        keyboardPosition: 31\n      });\n    } else if (this.state.keyboardPosition === 23) {\n      this.setState({\n        keyboardPosition: 22\n      });\n    } else if (this.state.keyboardPosition === 22) {\n      this.setState({\n        keyboardPosition: 21\n      });\n    } else if (this.state.keyboardPosition === 13) {\n      this.setState({\n        keyboardPosition: 12\n      });\n    } else if (this.state.keyboardPosition === 12) {\n      this.setState({\n        keyboardPosition: 11\n      });\n    }\n  }\n\n  moveDown() {\n    if (this.state.keyboardPosition === 11) {\n      this.setState({\n        keyboardPosition: 21\n      });\n    } else if (this.state.keyboardPosition === 21) {\n      this.setState({\n        keyboardPosition: 31\n      });\n    } else if (this.state.keyboardPosition === 12) {\n      this.setState({\n        keyboardPosition: 22\n      });\n    } else if (this.state.keyboardPosition === 22) {\n      this.setState({\n        keyboardPosition: 32\n      });\n    } else if (this.state.keyboardPosition === 13) {\n      this.setState({\n        keyboardPosition: 23\n      });\n    } else if (this.state.keyboardPosition === 23) {\n      this.setState({\n        keyboardPosition: 33\n      });\n    }\n  }\n\n  moveUp() {\n    if (this.state.keyboardPosition === 31) {\n      this.setState({\n        keyboardPosition: 21\n      });\n    } else if (this.state.keyboardPosition === 21) {\n      this.setState({\n        keyboardPosition: 11\n      });\n    } else if (this.state.keyboardPosition === 32) {\n      this.setState({\n        keyboardPosition: 22\n      });\n    } else if (this.state.keyboardPosition === 22) {\n      this.setState({\n        keyboardPosition: 12\n      });\n    } else if (this.state.keyboardPosition === 33) {\n      this.setState({\n        keyboardPosition: 23\n      });\n    } else if (this.state.keyboardPosition === 23) {\n      this.setState({\n        keyboardPosition: 13\n      });\n    }\n  }\n\n  move(direction) {\n    console.log(direction);\n\n    if (direction === 39) {\n      this.moveRight();\n    } else if (direction === 37) {\n      this.moveLeft();\n    } else if (direction === 40) {\n      this.moveDown();\n    } else if (direction === 38) {\n      this.moveUp();\n    }\n  }\n\n  keyBoard(keyName) {\n    if (keyName.keyCode === 38 || keyName.keyCode === 37 || keyName.keyCode === 39 || keyName.keyCode === 40 || keyName.keyCode === 13) {\n      this.setState({\n        moving: keyName.keyCode\n      });\n\n      if (!this.state.usingKeyboard) {\n        this.setState({\n          usingKeyboard: true,\n          keyboardPosition: 11\n        });\n      } else {\n        if (keyName.keyCode === 13) {\n          this.play(this.state.keyboardPosition);\n        } else {\n          this.move(keyName.keyCode);\n        }\n      }\n    }\n  }\n\n  restart() {\n    this.setState({\n      gameOver: false,\n      oPlaying: false,\n      buttons: [{\n        id: 11,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 12,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 13,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 21,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 22,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 23,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 31,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 32,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 33,\n        status: false,\n        shape: \"\"\n      }]\n    });\n  }\n\n  render() {\n    const {\n      keyboardPosition,\n      usingKeyboard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(HotKeys, {\n      keyName: \"left, right, down, up, enter, space\",\n      onKeyDown: this.keyBoard.bind(this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"principal-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-game\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"first-row row\",\n            children: this.state.buttons.filter(button => button.id < 14).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: element.id,\n                className: usingKeyboard && keyboardPosition === element.id ? \"button-size button-border\" : \"button-size\",\n                onClick: () => this.play(element.id),\n                disabled: this.state.oPlaying || this.state.gameOver,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"shape\",\n                  children: element.shape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 41\n              }, this)\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"second-row row\",\n            children: this.state.buttons.filter(button => button.id > 14 && button.id < 24).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: element.id,\n                className: usingKeyboard && keyboardPosition === element.id ? \"button-size button-border\" : \"button-size\",\n                onClick: () => this.play(element.id),\n                disabled: this.state.oPlaying || this.state.gameOver,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"shape\",\n                  children: element.shape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 41\n              }, this)\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"third-row row\",\n            children: this.state.buttons.filter(button => button.id > 24 && button.id < 34).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: element.id,\n                className: usingKeyboard && keyboardPosition === element.id ? \"button-size button-border\" : \"button-size\",\n                onClick: () => this.play(element.id),\n                disabled: this.state.oPlaying || this.state.gameOver,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"shape\",\n                  children: element.shape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 41\n              }, this)\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.restart(),\n            disabled: !this.state.gameOver,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shape\",\n              children: \"Play again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"test\",\n            children: [\"I'm moving with keyboard to \", this.state.moving]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Key board en button \", this.state.keyboardPosition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/fiorella/Desktop/Pernix/Tic-Tac-Toe Project/tic-tac-toe/src/tic-tac-toe/tic-tac-toe.js"],"names":["React","swal","HotKeys","TicTacToe","Component","constructor","props","winningCombinations","state","gameOver","oPlaying","keyboardPosition","moving","usingKeyboard","buttons","id","status","shape","play","bind","restart","refButton11","createRef","componentDidMount","componentWillUnmount","contains","buttonShape","combination","includes","winner","win","filter","length","winShapeO","buttonO","button","map","btn","setState","displayPopUp","noWinner","winX","winO","availableSpaces","console","log","generateRandom","min","max","rand","Math","floor","random","setButton","buttonId","buttonsTemp","buttonTemp","find","oPlayingTemp","setTimeout","setKeyPosition","position","moveRight","moveLeft","moveDown","moveUp","move","direction","keyBoard","keyName","keyCode","render","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './../css/main-page.css';\nimport swal from 'sweetalert';\nimport { HotKeys } from \"react-hotkeys\";\n\n\nclass TicTacToe extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.winningCombinations = [[11, 12, 13], [21, 22, 23], [31, 32, 33], [11, 21, 31],\n        [12, 22, 32], [13, 23, 33], [11, 22, 33], [31, 22, 13]];\n        this.state = {\n            gameOver: false,\n            oPlaying: false,\n            keyboardPosition: 11,\n            moving: \"\",\n            usingKeyboard: false,\n            buttons: [\n                {\n                    id: 11,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 12,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 13,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 21,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 22,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 23,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 31,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 32,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 33,\n                    status: false,\n                    shape: \"\",\n                },\n            ]\n        }\n\n        this.play = this.play.bind(this);\n        this.restart = this.restart.bind(this);\n        this.refButton11 = React.createRef();\n\n    };\n\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    contains(buttonShape, combination) {\n        return (buttonShape.includes(combination[0]) &&\n            buttonShape.includes(combination[1]) &&\n            buttonShape.includes(combination[2]));\n    }\n\n    winner(buttonShape) {\n        let win = this.winningCombinations.filter(win => {\n            return this.contains(buttonShape, win);\n        })\n\n        return (win.length > 0);\n    }\n\n    winShapeO(buttons, shape) {\n        let buttonO = buttons.filter((button) => button.shape === shape).map(btn => { return btn.id });\n        if (this.winner(buttonO)) {\n            this.setState({\n                gameOver: true,\n            })\n            this.displayPopUp(shape);\n        }\n    }\n\n    noWinner(winX, winO) {\n        let availableSpaces = this.state.buttons.filter(button => button.status === false);\n        console.log(availableSpaces === 0 && !winX && !winO);\n        return (availableSpaces === 0 && !winX && !winO);\n    }\n\n    generateRandom(buttons) {\n        let availableSpaces = buttons.filter(button => button.status === false);\n        const min = 0;\n        const max = availableSpaces.length;\n        const rand = min + Math.floor(Math.random() * (max - min));\n\n        return availableSpaces[rand];\n    }\n\n    setButton(buttonId) {\n        let buttonsTemp = this.state.buttons;\n        let buttonTemp = buttonsTemp.find(button => button.id === buttonId);\n        let oPlayingTemp = false;\n\n        console.log(buttonTemp);\n        console.log(\"Hola\");\n        if (!buttonTemp.state) {\n            buttonTemp.shape = \"x\";\n            buttonTemp.status = true;\n            oPlayingTemp = true;\n            this.setState({\n                buttons: buttonsTemp,\n                oPlaying: oPlayingTemp\n            })\n            let winX = this.winShapeO(this.state.buttons, \"x\");\n\n            if (!winX) {\n                buttonTemp = this.generateRandom(this.state.buttons);\n                setTimeout(() => {\n                    buttonTemp.shape = \"o\";\n                    buttonTemp.status = true;\n                    oPlayingTemp = false;\n                    this.setState({\n                        buttons: buttonsTemp,\n                        oPlaying: oPlayingTemp\n                    })\n                    this.winShapeO(this.state.buttons, \"o\");\n                }, 1000);\n            }\n        }else{\n            swal(\"Por favor elija otra celda\");\n        }\n\n        console.log(this.noWinner(winX, this.winShapeO(this.state.buttons, \"o\")));\n    }\n\n    displayPopUp(shape) {\n        swal(\"Player \" + shape + \" win.\");\n    }\n\n    play(button) {\n        console.log(\"Hola, playing\");\n        this.setButton(button);\n    }\n\n    setKeyPosition(position) {\n        this.setState({\n            keyboardPosition: position\n        });\n    }\n\n    moveRight() {\n        if (this.state.keyboardPosition === 11) {\n            this.setState({\n                keyboardPosition: 12\n            });\n        } else if (this.state.keyboardPosition === 12) {\n            this.setState({\n                keyboardPosition: 13\n            })\n        } else if (this.state.keyboardPosition === 21) {\n            this.setState({\n                keyboardPosition: 22\n            })\n        } else if (this.state.keyboardPosition === 22) {\n            this.setState({\n                keyboardPosition: 23\n            })\n        } else if (this.state.keyboardPosition === 31) {\n            this.setState({\n                keyboardPosition: 32\n            })\n        } else if (this.state.keyboardPosition === 32) {\n            this.setState({\n                keyboardPosition: 33\n            })\n        }\n    }\n\n    moveLeft() {\n        if (this.state.keyboardPosition === 33) {\n            this.setState({\n                keyboardPosition: 32\n            });\n        } else if (this.state.keyboardPosition === 32) {\n            this.setState({\n                keyboardPosition: 31\n            })\n        } else if (this.state.keyboardPosition === 23) {\n            this.setState({\n                keyboardPosition: 22\n            })\n        } else if (this.state.keyboardPosition === 22) {\n            this.setState({\n                keyboardPosition: 21\n            })\n        } else if (this.state.keyboardPosition === 13) {\n            this.setState({\n                keyboardPosition: 12\n            })\n        } else if (this.state.keyboardPosition === 12) {\n            this.setState({\n                keyboardPosition: 11\n            })\n        }\n    }\n\n    moveDown() {\n        if (this.state.keyboardPosition === 11) {\n            this.setState({\n                keyboardPosition: 21\n            });\n        } else if (this.state.keyboardPosition === 21) {\n            this.setState({\n                keyboardPosition: 31\n            })\n        } else if (this.state.keyboardPosition === 12) {\n            this.setState({\n                keyboardPosition: 22\n            })\n        } else if (this.state.keyboardPosition === 22) {\n            this.setState({\n                keyboardPosition: 32\n            })\n        } else if (this.state.keyboardPosition === 13) {\n            this.setState({\n                keyboardPosition: 23\n            })\n        } else if (this.state.keyboardPosition === 23) {\n            this.setState({\n                keyboardPosition: 33\n            })\n        }\n    }\n\n    moveUp() {\n        if (this.state.keyboardPosition === 31) {\n            this.setState({\n                keyboardPosition: 21\n            });\n        } else if (this.state.keyboardPosition === 21) {\n            this.setState({\n                keyboardPosition: 11\n            })\n        } else if (this.state.keyboardPosition === 32) {\n            this.setState({\n                keyboardPosition: 22\n            })\n        } else if (this.state.keyboardPosition === 22) {\n            this.setState({\n                keyboardPosition: 12\n            })\n        } else if (this.state.keyboardPosition === 33) {\n            this.setState({\n                keyboardPosition: 23\n            })\n        } else if (this.state.keyboardPosition === 23) {\n            this.setState({\n                keyboardPosition: 13\n            })\n        }\n    }\n\n    move(direction) {\n        console.log(direction);\n        if (direction === 39) {\n            this.moveRight()\n        } else if (direction === 37) {\n            this.moveLeft();\n        } else if (direction === 40) {\n            this.moveDown();\n        } else if (direction === 38) {\n            this.moveUp();\n        }\n    }\n\n\n    keyBoard(keyName) {\n\n        if (keyName.keyCode === 38 || keyName.keyCode === 37 || keyName.keyCode === 39 || keyName.keyCode === 40 || keyName.keyCode === 13) {\n            this.setState({\n                moving: keyName.keyCode\n            });\n            if (!this.state.usingKeyboard) {\n                this.setState({\n                    usingKeyboard: true,\n                    keyboardPosition: 11\n                })\n\n            } else {\n                if (keyName.keyCode === 13) {\n                    this.play(this.state.keyboardPosition);\n                } else {\n                    this.move(keyName.keyCode);\n                }\n\n            }\n        }\n\n    }\n\n\n    restart() {\n        this.setState({\n            gameOver: false,\n            oPlaying: false,\n            buttons: [\n                {\n                    id: 11,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 12,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 13,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 21,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 22,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 23,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 31,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 32,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 33,\n                    status: false,\n                    shape: \"\",\n                },\n            ]\n        })\n    }\n\n    render() {\n        const { keyboardPosition, usingKeyboard } = this.state;\n        return (\n            <HotKeys\n                keyName=\"left, right, down, up, enter, space\"\n                onKeyDown={this.keyBoard.bind(this)}\n            >\n                <div className=\"principal-page\">\n                    <div className=\"table-game\">\n                        <div className=\"first-row row\">\n                            {\n                                this.state.buttons.filter((button) => button.id < 14).map((element) =>\n                                    <div key={element.id}>\n                                        <button id={element.id} className={(usingKeyboard && keyboardPosition === element.id) ? \"button-size button-border\" : \"button-size\"} onClick={() => this.play(element.id)} disabled={this.state.oPlaying || this.state.gameOver}>\n                                            <span className=\"shape\">{element.shape}</span>\n                                        </button>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"second-row row\">\n                            {\n                                this.state.buttons.filter((button) => (button.id > 14 && button.id < 24)).map((element) =>\n                                    <div key={element.id}>\n                                        <button id={element.id} className={(usingKeyboard && keyboardPosition === element.id) ? \"button-size button-border\" : \"button-size\"} onClick={() => this.play(element.id)} disabled={this.state.oPlaying || this.state.gameOver}>\n                                            <span className=\"shape\">{element.shape}</span>\n                                        </button>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"third-row row\">\n                            {\n                                this.state.buttons.filter((button) => (button.id > 24 && button.id < 34)).map((element) =>\n                                    <div key={element.id}>\n                                        <button id={element.id} className={(usingKeyboard && keyboardPosition === element.id) ? \"button-size button-border\" : \"button-size\"} onClick={() => this.play(element.id)} disabled={this.state.oPlaying || this.state.gameOver}>\n                                            <span className=\"shape\">{element.shape}</span>\n                                        </button>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                    <br />\n                    <div>\n                        <button onClick={() => this.restart()} disabled={!this.state.gameOver}>\n                            <span className=\"shape\">Play again</span>\n                        </button>\n                    </div>\n                    <div>\n                        <p id=\"test\">I'm moving with keyboard to {this.state.moving}</p>\n                        <p> Key board en button {this.state.keyboardPosition}</p>\n                    </div>\n                </div>\n            </HotKeys>\n        )\n    }\n}\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}