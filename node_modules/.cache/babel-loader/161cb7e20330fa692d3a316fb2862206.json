{"ast":null,"code":"var _jsxFileName = \"/home/fiorella/Desktop/Pernix/Tic-Tac-Toe Project/tic-tac-toe/src/tic-tac-toe/tic-tac-toe.js\";\nimport React from 'react';\nimport './../css/main-page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameOver: false,\n      oPlaying: false,\n      buttons: [{\n        id: 11,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 12,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 13,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 21,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 22,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 23,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 31,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 32,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 33,\n        status: false,\n        shape: \"\"\n      }]\n    };\n    this.play = this.play.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  winner(buttonShape) {\n    const winningCombinations = [[11, 12, 13], [21, 22, 23], [31, 32, 33], [11, 21, 31], [12, 22, 32], [13, 23, 33], [11, 22, 33], [31, 22, 13]];\n  }\n\n  winShapeO(buttons) {\n    let buttonO = buttons.filter(button => button.shape === \"o\").map(btn => {\n      return btn.id;\n    });\n  }\n\n  winShapeX(buttons) {\n    let buttonX = buttons.filter(button => button.shape === \"x\"); //console.log(\"Buttons X\", buttonX.includes(11,12,13)); \n  }\n\n  generateRandom(buttons) {\n    let availableSpaces = buttons.filter(button => button.status === false);\n    const min = 0;\n    const max = availableSpaces.length;\n    const rand = min + Math.floor(Math.random() * (max - min));\n    return availableSpaces[rand];\n  }\n\n  setButton(buttonId) {\n    let buttonsTemp = this.state.buttons;\n    let buttonTemp = buttonsTemp.find(button => button.id === buttonId);\n    let oPlayingTemp = false;\n    buttonTemp.shape = \"x\";\n    buttonTemp.status = true;\n    oPlayingTemp = true;\n    this.setState({\n      buttons: buttonsTemp,\n      oPlaying: oPlayingTemp\n    });\n    this.winShapeO(this.state.buttons);\n    buttonTemp = this.generateRandom(this.state.buttons);\n    setTimeout(() => {\n      buttonTemp.shape = \"o\";\n      buttonTemp.status = true;\n      oPlayingTemp = false;\n      this.setState({\n        buttons: buttonsTemp,\n        oPlaying: oPlayingTemp\n      });\n    }, 1000);\n  }\n\n  play(button) {\n    this.setButton(button);\n  }\n\n  restart() {\n    this.setState({\n      gameOver: false,\n      oPlaying: false,\n      buttons: [{\n        id: 11,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 12,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 13,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 21,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 22,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 23,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 31,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 32,\n        status: false,\n        shape: \"\"\n      }, {\n        id: 33,\n        status: false,\n        shape: \"\"\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"principal-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-row row\",\n          children: this.state.buttons.filter(button => button.id < 14).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: element.id,\n              className: \"button-size\",\n              onClick: () => this.play(element.id),\n              disabled: this.state.oPlaying,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shape\",\n                children: element.shape\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"second-row row\",\n          children: this.state.buttons.filter(button => button.id > 14 && button.id < 24).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: element.id,\n              className: \"button-size\",\n              onClick: () => this.play(element.id),\n              disabled: this.state.oPlaying,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shape\",\n                children: element.shape\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this)\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"third-row row\",\n          children: this.state.buttons.filter(button => button.id > 24 && button.id < 34).map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: element.id,\n              className: \"button-size\",\n              onClick: () => this.play(element.id),\n              disabled: this.state.oPlaying,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shape\",\n                children: element.shape\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this)\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.restart(),\n          disabled: !this.state.gameOver,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"shape\",\n            children: \"Play again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/fiorella/Desktop/Pernix/Tic-Tac-Toe Project/tic-tac-toe/src/tic-tac-toe/tic-tac-toe.js"],"names":["React","TicTacToe","Component","constructor","props","state","gameOver","oPlaying","buttons","id","status","shape","play","bind","restart","componentDidMount","componentWillUnmount","winner","buttonShape","winningCombinations","winShapeO","buttonO","filter","button","map","btn","winShapeX","buttonX","generateRandom","availableSpaces","min","max","length","rand","Math","floor","random","setButton","buttonId","buttonsTemp","buttonTemp","find","oPlayingTemp","setState","setTimeout","render","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OADK,EAML;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OANK,EAWL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAXK,EAgBL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAhBK,EAqBL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OArBK,EA0BL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OA1BK,EA+BL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OA/BK,EAoCL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OApCK,EAyCL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAzCK;AAHA,KAAb;AAoDA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAGDE,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,CAACC,WAAD,EAAa;AACf,UAAMC,mBAAmB,GAAG,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,EAAY,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAZ,EAAuB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAvB,EAAkC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAlC,EAC5B,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAD4B,EACjB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADiB,EACN,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADM,EACK,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADL,CAA5B;AAEH;;AAEDC,EAAAA,SAAS,CAACZ,OAAD,EAAS;AACd,QAAIa,OAAO,GAAGb,OAAO,CAACc,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACZ,KAAP,KAAiB,GAA5C,EAAiDa,GAAjD,CAAqDC,GAAG,IAAI;AAAC,aAAOA,GAAG,CAAChB,EAAX;AAAc,KAA3E,CAAd;AAEH;;AAEDiB,EAAAA,SAAS,CAAClB,OAAD,EAAS;AACd,QAAImB,OAAO,GAAGnB,OAAO,CAACc,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACZ,KAAP,KAAiB,GAA5C,CAAd,CADc,CAEd;AAEH;;AAEDiB,EAAAA,cAAc,CAACpB,OAAD,EAAS;AACnB,QAAIqB,eAAe,GAAGrB,OAAO,CAACc,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACb,MAAP,KAAkB,KAA3C,CAAtB;AACA,UAAMoB,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAGF,eAAe,CAACG,MAA5B;AACA,UAAMC,IAAI,GAAGH,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,CAAX,CAAnB;AAEA,WAAOD,eAAe,CAACI,IAAD,CAAtB;AACH;;AAEDI,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,QAAIC,WAAW,GAAG,KAAKlC,KAAL,CAAWG,OAA7B;AACA,QAAIgC,UAAU,GAAGD,WAAW,CAACE,IAAZ,CAAiBlB,MAAM,IAAIA,MAAM,CAACd,EAAP,KAAc6B,QAAzC,CAAjB;AACA,QAAII,YAAY,GAAG,KAAnB;AAEAF,IAAAA,UAAU,CAAC7B,KAAX,GAAmB,GAAnB;AACA6B,IAAAA,UAAU,CAAC9B,MAAX,GAAoB,IAApB;AACAgC,IAAAA,YAAY,GAAG,IAAf;AACA,SAAKC,QAAL,CAAc;AACVnC,MAAAA,OAAO,EAAE+B,WADC;AAEVhC,MAAAA,QAAQ,EAAEmC;AAFA,KAAd;AAKA,SAAKtB,SAAL,CAAe,KAAKf,KAAL,CAAWG,OAA1B;AAEAgC,IAAAA,UAAU,GAAG,KAAKZ,cAAL,CAAoB,KAAKvB,KAAL,CAAWG,OAA/B,CAAb;AACAoC,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,UAAU,CAAC7B,KAAX,GAAmB,GAAnB;AACA6B,MAAAA,UAAU,CAAC9B,MAAX,GAAoB,IAApB;AACAgC,MAAAA,YAAY,GAAG,KAAf;AACA,WAAKC,QAAL,CAAc;AACVnC,QAAAA,OAAO,EAAE+B,WADC;AAEVhC,QAAAA,QAAQ,EAAEmC;AAFA,OAAd;AAIH,KARS,EAQP,IARO,CAAV;AASH;;AAED9B,EAAAA,IAAI,CAACW,MAAD,EAAS;AACT,SAAKc,SAAL,CAAed,MAAf;AACH;;AAEDT,EAAAA,OAAO,GAAG;AACN,SAAK6B,QAAL,CAAc;AACVrC,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,QAAQ,EAAE,KAFA;AAGVC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OADK,EAML;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OANK,EAWL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAXK,EAgBL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAhBK,EAqBL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OArBK,EA0BL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OA1BK,EA+BL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OA/BK,EAoCL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OApCK,EAyCL;AACIF,QAAAA,EAAE,EAAE,EADR;AAEIC,QAAAA,MAAM,EAAE,KAFZ;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAzCK;AAHC,KAAd;AAmDH;;AAEDkC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQ,KAAKxC,KAAL,CAAWG,OAAX,CAAmBc,MAAnB,CAA2BC,MAAD,IAAYA,MAAM,CAACd,EAAP,GAAY,EAAlD,EAAsDe,GAAtD,CAA2DsB,OAAD,iBACtD;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAEA,OAAO,CAACrC,EAApB;AAAuB,cAAA,SAAS,EAAC,aAAjC;AAA+C,cAAA,OAAO,EAAE,MAAM,KAAKG,IAAL,CAAUkC,OAAO,CAACrC,EAAlB,CAA9D;AAAqF,cAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWE,QAA1G;AAAA,qCACI;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBuC,OAAO,CAACnC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,aAAWmC,OAAO,CAACrC,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAEQ,KAAKJ,KAAL,CAAWG,OAAX,CAAmBc,MAAnB,CAA2BC,MAAD,IAAaA,MAAM,CAACd,EAAP,GAAY,EAAZ,IAAkBc,MAAM,CAACd,EAAP,GAAY,EAArE,EAA0Ee,GAA1E,CAA+EsB,OAAD,iBAC1E;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAEA,OAAO,CAACrC,EAApB;AAAwB,cAAA,SAAS,EAAC,aAAlC;AAAgD,cAAA,OAAO,EAAE,MAAM,KAAKG,IAAL,CAAUkC,OAAO,CAACrC,EAAlB,CAA/D;AAAsF,cAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWE,QAA3G;AAAA,qCACI;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBuC,OAAO,CAACnC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUmC,OAAO,CAACrC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAuBI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQ,KAAKJ,KAAL,CAAWG,OAAX,CAAmBc,MAAnB,CAA2BC,MAAD,IAAaA,MAAM,CAACd,EAAP,GAAY,EAAZ,IAAkBc,MAAM,CAACd,EAAP,GAAY,EAArE,EAA0Ee,GAA1E,CAA+EsB,OAAD,iBAC1E;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAEA,OAAO,CAACrC,EAApB;AAAwB,cAAA,SAAS,EAAC,aAAlC;AAAgD,cAAA,OAAO,EAAE,MAAM,KAAKG,IAAL,CAAUkC,OAAO,CAACrC,EAAlB,CAA/D;AAAsF,cAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWE,QAA3G;AAAA,qCACI;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBuC,OAAO,CAACnC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUmC,OAAO,CAACrC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAoCI;AAAA;AAAA;AAAA;AAAA,cApCJ,eAqCI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKK,OAAL,EAAvB;AAAuC,UAAA,QAAQ,EAAE,CAAC,KAAKT,KAAL,CAAWC,QAA7D;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6CH;;AAjOmC;;AAmOxC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport './../css/main-page.css';\n\nclass TicTacToe extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameOver: false,\n            oPlaying: false,\n            buttons: [\n                {\n                    id: 11,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 12,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 13,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 21,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 22,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 23,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 31,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 32,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 33,\n                    status: false,\n                    shape: \"\",\n                },\n            ]\n        }\n\n        this.play = this.play.bind(this);\n        this.restart = this.restart.bind(this);\n    };\n\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    winner(buttonShape){\n        const winningCombinations = [[11,12,13],[21,22,23],[31,32,33],[11,21,31],\n        [12,22,32],[13,23,33],[11,22,33],[31,22,13]];\n    }\n\n    winShapeO(buttons){\n        let buttonO = buttons.filter((button) => button.shape === \"o\").map(btn => {return btn.id});\n        \n    }\n\n    winShapeX(buttons){\n        let buttonX = buttons.filter((button) => button.shape === \"x\");\n        //console.log(\"Buttons X\", buttonX.includes(11,12,13)); \n        \n    }\n\n    generateRandom(buttons){\n        let availableSpaces = buttons.filter(button => button.status === false);\n        const min = 0;\n        const max = availableSpaces.length;\n        const rand = min + Math.floor(Math.random() * (max - min));\n\n        return availableSpaces[rand];\n    }\n\n    setButton(buttonId) {\n        let buttonsTemp = this.state.buttons;\n        let buttonTemp = buttonsTemp.find(button => button.id === buttonId);\n        let oPlayingTemp = false;\n\n        buttonTemp.shape = \"x\";\n        buttonTemp.status = true;\n        oPlayingTemp = true;\n        this.setState({\n            buttons: buttonsTemp,\n            oPlaying: oPlayingTemp\n        })\n\n        this.winShapeO(this.state.buttons);\n\n        buttonTemp = this.generateRandom(this.state.buttons);\n        setTimeout(() => {\n            buttonTemp.shape = \"o\";\n            buttonTemp.status = true;\n            oPlayingTemp = false;\n            this.setState({\n                buttons: buttonsTemp,\n                oPlaying: oPlayingTemp\n            })\n        }, 1000);\n    }\n\n    play(button) {\n        this.setButton(button);\n    }\n\n    restart() {\n        this.setState({\n            gameOver: false,\n            oPlaying: false,\n            buttons: [\n                {\n                    id: 11,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 12,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 13,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 21,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 22,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 23,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 31,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 32,\n                    status: false,\n                    shape: \"\",\n                },\n                {\n                    id: 33,\n                    status: false,\n                    shape: \"\",\n                },\n            ]\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"principal-page\">\n                <div className=\"table-game\">\n                    <div className=\"first-row row\">\n                        {\n                            this.state.buttons.filter((button) => button.id < 14).map((element) =>\n                                <div key ={element.id}>\n                                    <button id={element.id}className=\"button-size\" onClick={() => this.play(element.id)} disabled={this.state.oPlaying}>\n                                        <span className=\"shape\">{element.shape}</span>\n                                    </button>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <div className=\"second-row row\">\n                        {\n                            this.state.buttons.filter((button) => (button.id > 14 && button.id < 24)).map((element) =>\n                                <div key={element.id}>\n                                    <button id={element.id} className=\"button-size\" onClick={() => this.play(element.id)} disabled={this.state.oPlaying}>\n                                        <span className=\"shape\">{element.shape}</span>\n                                    </button>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <div className=\"third-row row\">\n                        {\n                            this.state.buttons.filter((button) => (button.id > 24 && button.id < 34)).map((element) =>\n                                <div key={element.id}>\n                                    <button id={element.id} className=\"button-size\" onClick={() => this.play(element.id)} disabled={this.state.oPlaying}>\n                                        <span className=\"shape\">{element.shape}</span>\n                                    </button>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n                <br/>\n                <div>\n                    <button onClick={() => this.restart()} disabled={!this.state.gameOver}>\n                        <span className=\"shape\">Play again</span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}